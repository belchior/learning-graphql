type Query {
  user(login: String!): User
}

type User implements Node {
  avatarUrl: String!
  bio: String
  company: String
  email: String!
  followers(after: String, before: String, first: Int, last: Int): UserConnection!
  following(after: String, before: String, first: Int, last: Int): UserConnection!
  id: ID!
  location: String
  login: String!
  name: String
  url: String!
  websiteUrl: String
}

interface Node {
  id: ID!
}

type UserConnection {
  edges: [UserEdge]!
  pageInfo: PageInfo!
}

type UserEdge {
  cursor: String!
  node: User
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}
